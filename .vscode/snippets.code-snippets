{
	// Place your mobile-automation-vanguard workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"console.log": {
		"scope": "javascript,typescript",
		"prefix": "cl",
		"body": [
			"console.log('$1');"
		],
		"description": "Log output to console"
	},
	"when.param": {
		"scope": "typescript",
		"prefix": "when-param",
		"body": [
			"When(/^$/, async () => {});"
		],
		"description": "Step definition"
	},
	"then.param": {
		"scope": "typescript",
		"prefix": "then-param",
		"body": [
			"Then(/^$/, async () => {});"
		],
		"description": "Step definition"
	},
	"when": {
		"scope": "typescript",
		"prefix": "when",
		"body": [
			"When('', async () => {});"
		],
		"description": "Step definition"
	},
	"then": {
		"scope": "typescript",
		"prefix": "then",
		"body": [
			"Then('', async () => {});"
		],
		"description": "Step definition"
	},
	"define.page": {
		"scope": "typescript",
		"prefix": "define-page",
		"body": [
			"const page = pages[''];"
		],
		"description": "Step definition"
	},
	"define.locator": {
		"scope": "typescript",
		"prefix": "define-locator",
		"body": [
			"page['']"
		],
		"description": "Step definition"
	},
	"define.table": {
		"scope": "typescript",
		"prefix": "define-table",
		"body": [
			"const input = table.hashes();"
		],
		"description": "Step definition"
	},
	
	"login.area": {
		"scope": "feature",
		"prefix": "step-login-area",
		"body": [
			"Given Dummy is user aplikasi super with the phone number area"
			"When Dummy successfully login and go to home application"
		],
		"description": "Step gherkin"
	},
	"login.new.acccount": {
		"scope": "feature",
		"prefix": "step-login-new",
		"body": [
			"Given Dummy is user aplikasi super with the phone number new account"
			"When Dummy successfully login and go to home application"
		],
		"description": "Step gherkin"
	},
	"login.non.area": {
		"scope": "feature",
		"prefix": "step-login-non-area",
		"body": [
			"Given Dummy is user aplikasi super with the phone number non area"
			"When Dummy successfully login and go to home application"
		],
		"description": "Step gherkin"
	},
	"login.non.verif": {
		"scope": "feature",
		"prefix": "step-login-non-verif",
		"body": [
			"Given Dummy is user aplikasi super with the phone number non verification"
			"When Dummy successfully login and go to home application"
		],
		"description": "Step gherkin"
	},
	"add.product.single": {
		"scope": "feature",
		"prefix": "step-single-product",
		"body": [
			"When Dummy selects the single product and add it to cart"
			"| product                                  |"
			"|  										|"
		],
		"description": "Step gherkin"
	},
	"add.product.multiple": {
		"scope": "feature",
		"prefix": "step-multiple-product",
		"body": [
			"When Dummy selects the multiple product and add it to cart"
			"| product                                  |"
			"|  										|"
			"|  										|"
		],
		"description": "Step gherkin"
	},
	"add.product.buymore": {
		"scope": "feature",
		"prefix": "step-multiple-product",
		"body": [
			"When Dummy selects the buy more product and add it to cart"
			"| product                                  |"
			"|  										|"
		],
		"description": "Step gherkin"
	},
	"checkout.voucher": {
		"scope": "feature",
		"prefix": "step-checkout-voucher",
		"body": [
			"When Dummy checks out and add quantity product with voucher after the product has been added to the cart"
			" | typePromo | typeProduct        | minumumOrder | quantity |"
			" |   		  |  				   |       		  |          |"
		],
		"description": "Step gherkin"
	},
	"checkout.non.voucher": {
		"scope": "feature",
		"prefix": "step-checkout-non-vocuher",
		"body": [
			"When Dummy checks out and add quantity product with voucher after the product has been added to the cart"
			" | typePromo    | typeProduct        | minumumOrder | quantity |"
			" |  non vouhcer |  	non vouhcer	  |  non vouhcer |          |"
		],
		"description": "Step gherkin"
	},

	"payment.va": {
		"scope": "feature",
		"prefix": "step-payment-va",
		"body": [
			"And Dummy make a payment VA using the 'methodBCA'"
		],
		"description": "Step gherkin"
	},
	"payment.coin": {
		"scope": "feature",
		"prefix": "step-payment-coin",
		"body": [
			"And Dummy make a payment Coin using the 'toogleCoin'"
		],
		"description": "Step gherkin"
	},
	"payment.cod": {
		"scope": "feature",
		"prefix": "step-payment-cod",
		"body": [
			"And Dummy make a payment COD using the 'methodCOD'"
		],
		"description": "Step gherkin"
	},
	"proses.order.success": {
		"scope": "feature",
		"prefix": "step-proses-success",
		"body": [
			"When Dummy waiting for proses order in operation"
			"| typeOrder | statusList1 | statusList2      | statusReady      | statusDeliver | qtyReceived | typeReject |"
			"| retail    | prepared    | ready_to_deliver | READY_TO_DELIVER | DELIVERED     |             | 0          |"
		],
		"description": "Step gherkin"
	},
	"proses.order.reject.cust": {
		"scope": "feature",
		"prefix": "step-proses-reject-cust",
		"body": [
			"When Dummy waiting for proses order in operation"
			"| typeOrder | statusList1 | statusList2      | statusReady      | statusDeliver | qtyReceived | typeReject |"
			"| retail    | prepared    | ready_to_deliver | READY_TO_DELIVER | DELIVERED     |            | 2           |"
		],
		"description": "Step gherkin"
	},
	"proses.order.reject.ops": {
		"scope": "feature",
		"prefix": "step-proses-reject-ops",
		"body": [
			"When Dummy waiting for proses order in operation"
			"| typeOrder | statusList1 | statusList2      | statusReady      | statusDeliver | qtyReceived | typeReject |"
			"| retail    | prepared    | ready_to_deliver | READY_TO_DELIVER | DELIVERED     |            | 1           |"
		],
		"description": "Step gherkin"
	},
	"delete.product.select": {
		"scope": "feature",
		"prefix": "step-delete-select",
		"body": [
			"When Dummy has been delete select product on the cart"
			"| product                                 |"
			"| 										   |"
		],
		"description": "Step gherkin"
	},
	"delete.product.all": {
		"scope": "feature",
		"prefix": "step-delete-select",
		"body": [
			"When Dummy has been delete all product on the cart"
			"| product                                 |"
			"| 										   |"
		],
		"description": "Step gherkin"
	},
	"allow.pemission.always": {
		"scope": "feature",
		"prefix": "step-allow-always",
		"body": [
			"  When Dummy allow always permission location"
		],
		"description": "Step gherkin"
	},
	"allow.pemission.once": {
		"scope": "feature",
		"prefix": "step-allow-once",
		"body": [
			"When Dummy allow once permission location"
		],
		"description": "Step gherkin"
	},
	"allow.pemission.deny": {
		"scope": "feature",
		"prefix": "step-deny",
		"body": [
			"When Dummy deny permission location"
		],
		"description": "Step gherkin"
	},

	"page.object.key": {
		"scope": "typescript",
		"prefix": "key-object",
		"body": [
			"export const page: { [key: string]: string } = {
				
			  };
			  "
		],
		"description": "key"
	},




}